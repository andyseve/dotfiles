# Author: Anish Sevekari
# Last Edited: Wed 18 Aug 2021 02:58:28 AM EDT
# Zshrc with only color and completiong settings

# Set zsh variables and source corresponding settings
ZSH_HOME=$HOME/.zsh
fpath=($ZSH_HOME/functions $ZSH_HOME/completions $fpath)

################################################################################
# Zplugin ######################################################################
################################################################################

source $HOME/.zplugin/bin/zplugin.zsh
autoload -Uz _zplugin
(( ${+_comps} )) && _comps[zplugin]=_zplugin

zplugin ice pick"async.zsh" src"pure.zsh"; zplugin light sindresorhus/pure 
zplugin light zdharma/fast-syntax-highlighting

################################################################################
# Settings #####################################################################
################################################################################

KEYTIMEOUT=1 # keytiming 10ms
CASE_SENSITIVE="false" # case sensative searches
HYPHEN_INSENSITIVE="true" # hyphen insensative searches
unsetopt beep # removes beeps in windows

setopt histreduceblanks # remove blanks
setopt histignorealldups # ignore repeats in history
setopt sharehistory # share history between terminals

setopt correct # spelling correction
COMPLETION_WAITING_DOTS="true"
bindkey -v # Use vim keybindings


# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history



################################################################################
# Keybindings ##################################################################
################################################################################

# Search
bindkey -M vicmd '?' history-incremental-search-backward
bindkey -M vicmd '/' history-incremental-search-forward

################################################################################
# Functions and Commands #######################################################
################################################################################

# Importing functions and commands
for file in $ZSH_HOME/functions/*.zsh; do
	source $file
done

_has() {
  return $( whence $1 >/dev/null )
}
_color() {
  return $( [ -z "$INSIDE_EMACS" ] )
}

# run neofetch at start of ssh session
if [[ -n $SSH_CONNECTION ]]; then
	if _has neofetch; then
		neofetch
	fi
fi



# FZF config
if _has fzf; then
	if _has ag; then
		export FZF_DEFAULT_COMMAND='ag -g ""' # Use Ag if it exists
		export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
		export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
	fi
  export FZF_DEFAULT_OPTS='
		--height 40% --reverse
  '
fi

################################################################################
# Aliases ######################################################################
################################################################################

# use colored versions of commands by default
if [ -x /usr/bin/dircolors ]; then
	if test -r ~/.zsh/dircolors; then
		eval "$(dircolors -b ~/.zsh/dircolors)"
	else
		eval "$(dircolors -b)"
	fi
	alias ls='ls --color=auto'
	alias dir='dir --color=auto'
	alias vdir='vdir --color=auto'

	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='tput bell'

# Importing Aliases
for file in $ZSH_HOME/aliases/*.zsh; do
	source $file
done

################################################################################
# Definitions ##################################################################
################################################################################

export PAGER='less'
if _has nvim; then
	export EDITOR='nvim'
else
	export EDITOR='vim'
fi

PATH="$PATH:$HOME/bin" # add my scripts to bin
PATH="$PATH:$HOME/.local/bin" # numpy scripts
if [ -e "$HOME/bin/miniconda3/bin" ]; then
	PATH="$PATH:$HOME/bin/miniconda3/bin" # add anaconda to path
fi


################################################################################
# Prompt #######################################################################
################################################################################
autoload -U promptinit && promptinit

PURE_PROMPT_SYMBOL='‚ùØ'
PROMPT='%(?.%F{green}.%F{red})${PURE_PROMPT_SYMBOL}%f '
PROMPT='%F{white}%* '$PROMPT

precmd_pipestatus() {
	RPROMPT="%F{red}${(j.|.)pipestatus}"
       if [[ ${(j.|.)pipestatus} = 0 ]]; then
              RPROMPT=""
       fi
}
add-zsh-hook precmd precmd_pipestatus

################################################################################
# Completions ##################################################################
################################################################################

# Use modern completion system
autoload -Uz compinit && compinit -u

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# vim:ft=zsh
